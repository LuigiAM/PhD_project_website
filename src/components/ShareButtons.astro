---
// src/components/ShareButtons.astro
import IconLinkedIn from './icons/IconLinkedIn.astro';
import IconX from './icons/IconX.astro';
import IconEmail from './icons/IconEmail.astro';
import IconLink from './icons/IconLink.astro';

// UPDATED: Destructure both props with default values
const { 
  pageTitle = "MEMoPAD Project", 
  shareDescription = "A PhD project exploring how co-designed emotion recognition technology can benefit mental health." 
} = Astro.props;

// Construct the full URL on the server
const pageUrl = `https://memopad.luigiandreamoretti.com${Astro.url.pathname}`;

// Construct the share URLs on the server for simplicity and reliability
const linkedInUrl = `https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(pageUrl)}&title=${encodeURIComponent(pageTitle)}&summary=${encodeURIComponent(shareDescription)}`;
const xUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(pageUrl)}&text=${encodeURIComponent(pageTitle)}`;
const emailUrl = `mailto:?subject=${encodeURIComponent(pageTitle)}&body=${encodeURIComponent(shareDescription + '\n\n' + pageUrl)}`;
---

<div class="share-container">
  <p class="share-title">Share this page</p>
  <div class="share-buttons">
    <a href={linkedInUrl} class="share-button" aria-label="Share on LinkedIn" target="_blank" rel="noopener noreferrer">
      <IconLinkedIn />
    </a>
    <a href={xUrl} class="share-button" aria-label="Share on X (formerly Twitter)" target="_blank" rel="noopener noreferrer">
      <IconX />
    </a>
    <a href={emailUrl} class="share-button" aria-label="Share via Email">
      <IconEmail />
    </a>
    <button id="copy-link" class="share-button" aria-label="Copy link to clipboard">
      <IconLink />
    </button>
  </div>
  <span id="copy-feedback" class="copy-feedback" aria-live="polite"></span>
</div>

<script define:vars={{ pageUrl }}>
  // This script now only handles the copy-to-clipboard functionality
  document.addEventListener('DOMContentLoaded', () => {
    const copyBtn = document.getElementById('copy-link');
    const feedbackEl = document.getElementById('copy-feedback');

    if (copyBtn && feedbackEl) {
      copyBtn.addEventListener('click', () => {
        const tempInput = document.createElement('input');
        document.body.appendChild(tempInput);
        tempInput.value = pageUrl;
        tempInput.select();
        document.execCommand('copy');
        document.body.removeChild(tempInput);
        
        feedbackEl.textContent = 'Link copied!';
        feedbackEl.classList.add('visible');
        setTimeout(() => {
          feedbackEl.classList.remove('visible');
        }, 2000);
      });
    }
  });
</script>

<style>
  .share-container {
    text-align: center;
    border-top: 1px solid var(--color-border);
    padding-top: 2rem;
    margin-top: 2rem;
  }
  .share-title {
    font-weight: 700;
    color: var(--color-text-muted);
    margin-bottom: 1.5rem;
  }
  .share-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }
  .share-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    background-color: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: 50%;
    color: var(--color-text-muted);
    transition: all 0.2s ease;
    cursor: pointer;
  }
  .share-button:hover {
    background-color: var(--color-primary);
    color: var(--color-white);
    border-color: var(--color-primary);
    transform: translateY(-2px);
  }
  .copy-feedback {
    display: block;
    margin-top: 1rem;
    color: var(--color-primary);
    font-weight: 700;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  .copy-feedback.visible {
    opacity: 1;
  }
</style>
